name: OpenWrt List Sync
on:
  schedule:
    - cron: '0 3 1 * *'  # 每月1号凌晨3点执行 (UTC时间)
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      MAX_RETRIES: 3
    steps:
      # ====================== 初始化阶段 ======================
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          persist-credentials: false  # 避免权限残留问题

      # ====================== 数据同步阶段 ======================
      - name: 安装依赖工具
        run: |
          sudo apt-get update
          sudo apt-get install -y html2text pandoc  # 确保文本转换工具可用

      - name: 同步官方列表
        run: |
          set -euo pipefail  # 严格错误检测
          
          # 保留原始注释
          grep '^#' scripts/Models > models_comments || true
          grep '^#' scripts/Archs > archs_comments || true

          # 获取设备列表（改进版）
          curl -s https://openwrt.org/supported_devices |
            awk '/<table class="device-list">/,/<\/table>/' |
            pandoc -f html -t markdown |  # 替代html2text以获得更好兼容性
            sed -n '/^| Model/,/^$/p' |
            awk -F'|' 'NR>2 {gsub(/ /,"",$2); gsub(/ /,"",$3); print $2 ":" $3}' > scripts/Models.new
          
          # 获取架构列表（改进版）
          curl -s https://openwrt.org/architectures |
            grep -Po '(?<=<code>)\w+/\S+(?=</code>)' |  # 更精准的正则匹配
            sort -u > scripts/Archs.new

          # 合并数据并清理临时文件
          cat models_comments scripts/Models.new > scripts/Models
          cat archs_comments scripts/Archs.new > scripts/Archs
          rm -f *.new *_comments

      # ====================== 格式处理阶段 ======================
      - name: 统一文件格式
        run: |
          # 处理Archs文件
          sed -i -E '
            s/[[:space:]]+/ /g;     # 合并连续空格
            s/[;,]/ /g;             # 替换分隔符
            s/[[:blank:]]+$//;      # 删除行尾空白
            /^[[:space:]]*$/d;      # 删除空行
            /^#/! s/([^/]+)\/(\S+)/\L\1\/\L\2/  # 强制小写转换
          ' scripts/Archs

          # 处理Models文件
          sed -i -E '
            s/[[:space:]]*:[[:space:]]*/:/;    # 统一冒号格式
            s/[^:]+:([^/]+)\/(\S+)/\L&/        # 架构部分转小写
          ' scripts/Models

      # ====================== 验证阶段 ======================
      - name: 架构格式校验
        run: |
          error_log=$(mktemp)
          while IFS= read -r line; do
            [[ "$line" =~ ^# ]] && continue
            IFS=' ' read -ra archs <<< "$line"
            for arch in "${archs[@]}"; do
              if [[ ! "$arch" =~ ^[a-z0-9_-]+\/[a-z0-9_-]+$ ]]; then
                echo "::error file=scripts/Archs,line=$(grep -n "$line" scripts/Archs | cut -d: -f1)::非法架构格式 '$arch'"
                touch $error_log
              fi
            done
          done < scripts/Archs
          [ -s $error_log ] && exit 1

      - name: 模型映射验证
        run: |
          invalid_count=0
          while IFS=: read -r model arch; do
            [[ "$model" =~ ^# ]] && continue
            if ! grep -qwF "$arch" scripts/Archs; then
              echo "::error file=scripts/Models,line=$(grep -n "$model:$arch" scripts/Models | cut -d: -f1)::设备 '$model' 映射到未声明的架构 '$arch'"
              ((invalid_count++))
            fi
          done < scripts/Models
          [ $invalid_count -gt 0 ] && exit 1

      # ====================== 构建验证 ======================
      - name: SDK兼容性测试
        uses: docker://ghcr.io/openwrt/sdk:latest
        with:
          args: |
            echo "验证编译环境..."
            ./scripts/feeds update -a
            ./scripts/feeds install -a
            make defconfig
            echo "基本配置验证通过"

      # ====================== 版本管理 ======================
      - name: 提交变更
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: 自动同步列表 ($(date +%Y%m%d))"
          file_pattern: scripts/
          skip_fetch: true
          commit_user_name: OpenWrt Sync Bot
          commit_user_email: sync-bot@openwrt.org

      - name: 打标签
        if: success()
        run: |
          current_tag="sync-$(date +%Y%m%d)"
          git tag $current_tag
          git push origin $current_tag

      - name: 清理旧标签
        run: |
          keep_tags=5
          git tag -l 'sync-*' --sort=-creatordate | tail -n +$(($keep_tags+1)) | xargs -I {} git push origin --delete {}
